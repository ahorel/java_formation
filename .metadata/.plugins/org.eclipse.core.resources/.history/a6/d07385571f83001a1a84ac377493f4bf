import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.math.BigDecimal;
import java.util.ArrayList;

public class CallDiscounterFunctionalInterface implements Discounter {
	
	public void call() {
		Discounter.easterDiscounter();
		Discounter.christmasDiscounter();
		Discounter.newYearDiscounter();
	}
}

public class Main implements Interface1{

	public static void main(String[] args) {
		Discounter easterDiscounter = amount -> amount.multiply(BigDecimal.valueOf(0.5));
		Discounter christmasDiscounter = amount -> amount.multiply(BigDecimal.valueOf(0.8));
		List<Discounter> list = Stream.of(easterDiscounter, christmasDiscounter)
			      .collect(Collectors.toList());
		
		/*
		List<Discounter> discounters = new ArrayList(
				  amount -> amount.multiply(BigDecimal.valueOf(0.9)),
				  amount -> amount.multiply(BigDecimal.valueOf(0.8)),
				  amount -> amount.multiply(BigDecimal.valueOf(0.5))
				);
		*/
		
		/*
		List<Discounter> discounters = new ArrayList() {{
				  add(amount -> amount.multiply(BigDecimal.valueOf(0.9)));
				  add(amount -> amount.multiply(BigDecimal.valueOf(0.8)));
				  add(amount -> amount.multiply(BigDecimal.valueOf(0.5)));
		}};
		*/
		

		
		Main main = new Main();
		Main.Inner inner = main.new Inner();		
		inner.log("chaine de caractère");
				
	}
	
	
	@Override
	public void method1() {
		// TODO Auto-generated method stub
		
	}
	

	/*
	@Override
	public void log(String str) {
		// TODO Auto-generated method stub
		Interface1.super.log(str);
	}
	*/
	
	//Appel de la méthode log déclarée par l'interface 1, lorsque la clase Main n'implémente qu'une seule interface
	public void handler() {
		log("appel de la méthode log depuis interface ?");
	}
	
	//Si plusieurs interfaces, diamond problem, on doit implémenter la method log dans la classe d'implementation
	//De la manière suivante :
	/*public void log() {
		Interface1.super.log("appel de la méthode log depuis interface 1");
	}
	*/
	
	//Création d'une classe Inner implémentant les deux interfaces
	public class Inner implements Interface1, Interface2{
		//Appel de la méthode log déclarée par l'interface 1, lorsque la clase Main n'implémente qu'une seule interface
		public void handler() {
			Main.this.log("appel de la méthode log depuis interface ?");
			Interface2 test = test -> test.method2();
		}
		
		//Si plusieurs interfaces, diamond problem, on doit implémenter la method log dans la classe d'implementation
		//De la manière suivante :
		public void log() {
			Interface1.super.log("");
		}

		@Override
		public void method1() {
			// TODO Auto-generated method stub
			
		}
		
		@Override
		public String method2() {
return "";			
		}
		
		//Méthode appelée depuis la méthode Main lorsque la inner class implémente plusieurs interfaces
		//Il est nécessaire d'override la méthode log.
		@Override
		public void log(String str) {
			Interface2.super.log(str);
		}
	}



}
