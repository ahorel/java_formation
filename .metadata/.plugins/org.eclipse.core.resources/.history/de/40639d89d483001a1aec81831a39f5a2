import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {

	public static void main(String[] args) {
		new ListeFactory().create();
		System.out.println(" finalisation du compteur cpt = " + TreatmentListInterface.cpt);
	}

}



public class ListeTypeArret implements TreatmentListInterface {
	@Override
	public List<String> treatment() {
		TreatmentListInterface.cpt++;
		List<String> ajoutListeTypeArret = Arrays.asList("4","5","6");
		trans.addAll(ajoutListeTypeArret);
		
		for (String s : TreatmentListInterface.trans) {
			System.out.println("ListeTypeArret trans=" + s);
		}
		
		return TreatmentListInterface.trans;
	}
}

public class ListeTypeMachine implements TreatmentListInterface {
	@Override
	public List<String> treatment() {
		TreatmentListInterface.cpt++;
		List<String> ajoutListeTypeMachine = Arrays.asList("7","8","9");
		trans.addAll(ajoutListeTypeMachine);
		
		for (String s : TreatmentListInterface.trans) {
			System.out.println("ListeTypeMachine trans=" + s);
		}
		
		return TreatmentListInterface.trans;
	}
}

public class ListeFactory {
	
	public static List<String> trans = null;
	private ListeFactory Data = new ListeFactory(0);
	public  List<String> getTrans() {
		return this.trans;
	}
	
	static String getGCMSportDS(){
		return "";
	}
	
	public List<TreatmentListInterface> create() {
		List<TreatmentListInterface> treatmentsListInterface = new ArrayList<TreatmentListInterface>()
				{{
					add(new ListeAgent());
					add(new ListeTypeMachine());
					add(new ListeTypeArret());
				}};
				
		for(TreatmentListInterface treatmentListInterface : treatmentsListInterface) {
			treatmentListInterface.treatment();
		}
		
		return treatmentsListInterface;
	}

	public int getCpt() {
		return Data.cpt;
	}

	public void setCpt(int cpt) {
		this.Data.cpt = cpt;
	}
}
