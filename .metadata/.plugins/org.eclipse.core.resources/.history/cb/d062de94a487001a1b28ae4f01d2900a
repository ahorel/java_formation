import java.util.BitSet;

/*
 * Ref : https://stackoverflow.com/questions/9141830/explain-the-use-of-a-bit-vector-for-determining-if-all-characters-are-unique
 * Question : 
 * Avec un tableau de tous les nombres de 1 à N, où N <= 32 0000.
 * Le tableau peut avoir des dupliqués et on ne sait pas quelle est la valeur du nombre N
 * Avec seulement 4 KiloBytes de mémoire disponibles, comment peut on écrire tous les dupliqués dans le tableau ?
 */
/*
 * On a 4 kilobytes de mémoire donc on peut adresser 4 * 1000 * 2^10 bits 
 */

/*
 * En utilisant un vecteur de 32 000 bits, ou chaque bits représente un entier.
 * En utilisant ce vecteur de bits, on peut itérer à travers le tableau, en flaguant chaque element v en settant v à 1
 * Quand on passe au devant d'un element dupliqué, on l'écrit 
 */

public class Q5_FindDuplicates {
	void checkDuplicates(int[] array) {
		BitVector bv = new BitVector(32000);
		for (int i = 0; i < array.length, i ++) {
			int num = array[i];
			int num0 = num - 1; // BitSet starts at 1, array starts at 0
			
			if(bv.get(num0)) {
				System.out.println(num0);
			}
			else {
				bv.set(num0);
			}
		}
	}
}

public class BitVector {
	int[] bitset;
	
	public BitVector(int size) {
		bitSet = new int[(size >> 5) + 1 ] // Divide by 32
	}
	
	public int set(int index) {
		this.index = index;
	}
	
	public int get() {
		
	}
}